//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRSClient.LibraryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Demo1")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibraryService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Borrow", ReplyAction="http://tempuri.org/IService/BorrowResponse")]
        CRSClient.LibraryService.BorrowResponse Borrow(CRSClient.LibraryService.BorrowRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Borrow", ReplyAction="http://tempuri.org/IService/BorrowResponse")]
        System.Threading.Tasks.Task<CRSClient.LibraryService.BorrowResponse> BorrowAsync(CRSClient.LibraryService.BorrowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Renew", ReplyAction="http://tempuri.org/IService/RenewResponse")]
        CRSClient.LibraryService.RenewResponse Renew(CRSClient.LibraryService.RenewRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Renew", ReplyAction="http://tempuri.org/IService/RenewResponse")]
        System.Threading.Tasks.Task<CRSClient.LibraryService.RenewResponse> RenewAsync(CRSClient.LibraryService.RenewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Return", ReplyAction="http://tempuri.org/IService/ReturnResponse")]
        CRSClient.LibraryService.ReturnResponse Return(CRSClient.LibraryService.ReturnRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Return", ReplyAction="http://tempuri.org/IService/ReturnResponse")]
        System.Threading.Tasks.Task<CRSClient.LibraryService.ReturnResponse> ReturnAsync(CRSClient.LibraryService.ReturnRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Borrow", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BorrowRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int bookId;
        
        public BorrowRequest() {
        }
        
        public BorrowRequest(int bookId) {
            this.bookId = bookId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BorrowResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BorrowResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int bookId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public CRSClient.LibraryService.Customer status2;
        
        public BorrowResponse() {
        }
        
        public BorrowResponse(int bookId, string status, CRSClient.LibraryService.Customer status2) {
            this.bookId = bookId;
            this.status = status;
            this.status2 = status2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Renew", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RenewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int bookId;
        
        public RenewRequest() {
        }
        
        public RenewRequest(int bookId) {
            this.bookId = bookId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RenewResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RenewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int renewCounter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int bookId;
        
        public RenewResponse() {
        }
        
        public RenewResponse(int renewCounter, string status, int bookId) {
            this.renewCounter = renewCounter;
            this.status = status;
            this.bookId = bookId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Return", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReturnRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int bookId;
        
        public ReturnRequest() {
        }
        
        public ReturnRequest(int bookId) {
            this.bookId = bookId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReturnResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReturnResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int bookId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool returned;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string status;
        
        public ReturnResponse() {
        }
        
        public ReturnResponse(int bookId, bool returned, string status) {
            this.bookId = bookId;
            this.returned = returned;
            this.status = status;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : CRSClient.LibraryService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<CRSClient.LibraryService.IService>, CRSClient.LibraryService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CRSClient.LibraryService.BorrowResponse CRSClient.LibraryService.IService.Borrow(CRSClient.LibraryService.BorrowRequest request) {
            return base.Channel.Borrow(request);
        }
        
        public string Borrow(ref int bookId, out CRSClient.LibraryService.Customer status2) {
            CRSClient.LibraryService.BorrowRequest inValue = new CRSClient.LibraryService.BorrowRequest();
            inValue.bookId = bookId;
            CRSClient.LibraryService.BorrowResponse retVal = ((CRSClient.LibraryService.IService)(this)).Borrow(inValue);
            bookId = retVal.bookId;
            status2 = retVal.status2;
            return retVal.status;
        }
        
        public System.Threading.Tasks.Task<CRSClient.LibraryService.BorrowResponse> BorrowAsync(CRSClient.LibraryService.BorrowRequest request) {
            return base.Channel.BorrowAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CRSClient.LibraryService.RenewResponse CRSClient.LibraryService.IService.Renew(CRSClient.LibraryService.RenewRequest request) {
            return base.Channel.Renew(request);
        }
        
        public int Renew(ref int bookId, out string status) {
            CRSClient.LibraryService.RenewRequest inValue = new CRSClient.LibraryService.RenewRequest();
            inValue.bookId = bookId;
            CRSClient.LibraryService.RenewResponse retVal = ((CRSClient.LibraryService.IService)(this)).Renew(inValue);
            status = retVal.status;
            bookId = retVal.bookId;
            return retVal.renewCounter;
        }
        
        public System.Threading.Tasks.Task<CRSClient.LibraryService.RenewResponse> RenewAsync(CRSClient.LibraryService.RenewRequest request) {
            return base.Channel.RenewAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CRSClient.LibraryService.ReturnResponse CRSClient.LibraryService.IService.Return(CRSClient.LibraryService.ReturnRequest request) {
            return base.Channel.Return(request);
        }
        
        public bool Return(ref int bookId, out string status) {
            CRSClient.LibraryService.ReturnRequest inValue = new CRSClient.LibraryService.ReturnRequest();
            inValue.bookId = bookId;
            CRSClient.LibraryService.ReturnResponse retVal = ((CRSClient.LibraryService.IService)(this)).Return(inValue);
            bookId = retVal.bookId;
            status = retVal.status;
            return retVal.returned;
        }
        
        public System.Threading.Tasks.Task<CRSClient.LibraryService.ReturnResponse> ReturnAsync(CRSClient.LibraryService.ReturnRequest request) {
            return base.Channel.ReturnAsync(request);
        }
    }
}
